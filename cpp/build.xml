<?xml version="1.0"?>
<!-- ====================================================================== 
 * $RCSfile: build.xml,v $
 *
 * $Revision: 1.8 $
 *
 * last change: $Author: cedricbosdo $ $Date: 2008/12/13 13:43:02 $
 *
 * The Contents of this file are made available subject to the terms of 
 * the GNU Lesser General Public License Version 2.1
 *
 * Sun Microsystems Inc., October, 2000
 *
 *
 * GNU Lesser General Public License Version 2.1
 * =============================================
 * Copyright 2000 by Sun Microsystems, Inc.
 * 901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License version 2.1, as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA 02111-1307 USA
 * 
 * The Initial Developer of the Original Code is: Sun Microsystems, Inc..
 *
 * Copyright: 2002 by Sun Microsystems, Inc.
 *
 * All Rights Reserved.
 *
 * Contributor(s): Cedric Bosdonnat                                                              
 ====================================================================== -->

<project name="cpp" default="cpp.error">
	
	<target name="cpp.error">
		<fail>Wrong target!
			
			This script should not be executed directly.
			Please, use the one in the build project
		</fail>
	</target>
	
	
	<target name="init-env"  unless="cpp.nobuild">
		<dirname property="cpp.basedir" file="${ant.file.cpp}"/>
		
		<property name="cpp.out.path" value="${cpp.basedir}/bin/ant" />
		<property name="cpp.out.classes" value="${cpp.out.path}/classes"/>
		<property name="cpp.sources" value="${cpp.basedir}/source"/>
		
		<path id="cpp.dependencies.path">
			<pathelement location="${packager.out.classes}"/>
			<pathelement location="${core.out.classes}"/>
			
			<fileset dir="${eclipse.home}/plugins/">
				<include name="org.eclipse*.jar"/>
			</fileset>
		</path>
		
		<mkdir dir="${cpp.out.path}/plugins" />
		<mkdir dir="${cpp.out.classes}" />
	</target>
	
	<target name="cpp.version" depends="init-env">
		<property name="manifest.properties" value="MANIFEST-MF.properties"/>
		<copy tofile="${manifest.properties}" file="${cpp.basedir}/META-INF/MANIFEST.MF"/>
		<replace file="${manifest.properties}" token=":" value="="/>
		<property file="${manifest.properties}" prefix="cpp"/>
		<delete file="${manifest.properties}" />
	</target>
	
	<target name="purge" depends="init-env">
		<property name="cpp.out.path" value="${cpp.basedir}/bin/ant" />
		<delete dir="${cpp.out.path}" />
	</target>

	<target name="cpp.compile" depends="init-env" unless="cpp.nobuild">
		<javac srcdir="${cpp.sources}" destdir="${cpp.out.classes}"
			target="1.5" source="1.5" 
			debug="${debug}"
			classpathref="cpp.dependencies.path" 
			excludes="**/unittests/**"/>
	</target>
	
	<target name="cpp.plugin" depends="cpp.version, cpp.compile" unless="cpp.nobuild">
		<jar destfile="${cpp.out.path}/plugins/${package.prefix}.cpp_${cpp.Bundle-Version}.jar"
			manifest="${cpp.basedir}/META-INF/MANIFEST.MF">
			<zipfileset prefix="" dir="${cpp.sources}">
				<exclude name="**/*.java"/>
			</zipfileset>
			<zipfileset prefix="" dir="${cpp.out.classes}"/>
			
			<zipfileset prefix="icons" dir="${cpp.basedir}/icons"/>
			<zipfileset prefix="" file="${cpp.basedir}/plugin.xml" />
		</jar>
	</target>
	
</project>

