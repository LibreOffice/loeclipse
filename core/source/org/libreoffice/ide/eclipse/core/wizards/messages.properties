InterfacesTable.Title=Inherited interfaces
InterfacesTable.OptionalTitle=?
InterfacesTable.NameTitle=Interface name
InterfaceMembersTable.Title=Members
InterfaceMemberDialog.Name=Name
InterfaceMemberDialog.Type=Type
InterfaceMemberDialog.ReturnType=Return type
InterfaceMemberDialog.Readonly=Read only
InterfaceMemberDialog.Bound=Bound
InterfaceMemberDialog.New=New
InterfaceMemberDialog.Remove=Remove
NewInterfaceWizard.JobName=Interface creation Job
NewInterfaceWizard.TaskName=Create interface
NewInterfaceWizardPage.Title=Interface creation page
NewInterfaceWizardPage.Label=Interface name
NewUnoProjectWizard.JobName=Uno Project creation job
NewUnoProjectPage.Title=New UNO-IDL project configuration
NewUreAppWizard.Title=New URE Application wizard
NewUnoProjectPage.Message=This wizard will create the basis of a UNO component project
NewUnoProjectPage.RootPackage=Root package
NewUnoProjectPage.RootPackageTooltip=Defines the vendor package name for the project,\neg: my.company. Do not change it manually in the files.
NewUnoProjectPage.CompExtension=Implementation package extension
NewUnoProjectPage.CustomIdlLabel=IDL files
NewUnoProjectPage.CompExtensionTooltip=Defines the extension package name, usually comp.\nIt means that the implementation classes should\nbe in the <root.package>.comp package
NewServiceWizard.JobName=Service creation Job
NewServiceWizardPage.Title=Service creation page
NewServiceWizard.DefaultName=MyService
NewServiceWizardPage.Type=Service name
NewUreAppWizard.Description=Create a new URE based application.
NewUnoProjectPage.Language=Programming language
NewUnoProjectPage.LanguageTooltip=Defines the implementation language.
NewUnoProjectPage.LayoutGroupTitle=Project layout
NewUnoProjectPage.CustomDirsLabel=Use custom project directories
NewInterfaceWizard.InterfaceCreationError=Interface creation failed
NewInterfaceWizardPage.InterfaceDescription=Configures the new interface to create. A UNO interface can inherit from one or more other interfaces.
NewInterfaceWizardPage.InheritancesTableTooltip=Set the optional and mandatory interfaces from \nwhich the new interface will inherit.\nIf there are only optional interfaces, the first one\nwill be considered as mandatory.
NewInterfaceWizardPage.MembersTableTooltip=Defines the interface attributes and methods
NewScopedElementWizardPage.NameExistsError=Name already exists, please change
NewScopedElementWizardPage.TypeNameTooltip=Defines the name of the new type, eg: XFoo for a Foo interface.\nThis value is mandatory.
NewUnoProjectWizard.CreateProjectError=Project creation failed
NewUnoProjectWizard.DeleteProjectError=Impossible to delete the project
NewUnoProjectWizard.ProjectCreationErrorTitle=UNO Project creation wizard
NewUnoProjectWizard.ProjectCreationErrorMessage=An error occured during the project creation, rollback changes
NewUnoProjectPage.InvalidPrefixError=The company prefix is a package like name
NewUnoProjectPage.ProjectCreationError=Error during the project folder creation
NewUnoProjectPage.WhiteSpacesWarning=It is not recommended to have any whitespace in the project path:\nthe project might fail to build
NewUnoProjectPage.SpecialSymbolsInProjectNameError=No Blank Space and _ allowed in Project Name. 
NewUnoProjectPage.CustomSourcesLabel=Sources
NewScopedElementWizardPage.Published=Published. Defines wether the type is stable \
        enough to be used by client code.
NewUnoProjectPage.InvalidCompError=Implementation extension is a single word which begin with a letter and can contain numbers
NewUnoProjectPage.UnoGroupTitle=UNO Project parameters
NewScopedElementWizardPage.Package=Module: 
NewScopedElementWizardPage.PackageTooltip=Defines the sub-modules name which will contain the new type,\neg: "sub::module". This value is optional.
NewServiceWizard.CreateServiceError=Service creation failed
NewServiceWizardPage.InheritedInterface=Inherited interface
NewServiceWizardPage.InheritanceTooltip=Defines the interface which will define all the capabilities of the new service.
NewServiceWizardPage.ServiceDescription=Configures the new service to create. A service exports only one interface.
InterfaceMembersTable.NameColumnTitle=Name
InterfaceMembersTable.TypeColumnTitle=Type
InterfaceMemberDialog.MethodChoice=Method
InterfaceMemberDialog.AttributeChoice=Attribute
InterfaceMemberDialog.ReadonlyTooltip=Defines whether the attribute can be changed\nfrom the component outside
InterfaceMemberDialog.BoundTooltip=This flag should be set if the property changes could be observed.
InterfaceMembersTable.FlagsColumnTitle=Flags / Arguments
InterfaceMemberDialog.CreationDialogTitle=Member creation
InterfaceMemberDialog.MethodDialogTitle=Method edition
InterfaceMemberDialog.AttributeDialogTitle=Attribute edition
InterfaceMemberDialog.ArgumentTableTooltip=Click on a property to edit it.
InterfaceMemberDialog.NewMemberDescription=Define a new interface attribute or method
InterfaceMemberDialog.EditMethodDescription=Change the method definition.
InterfaceMemberDialog.ArgumentsTitle=Arguments
InterfaceMemberDialog.ArgumentNameColumnTitle=Name
InterfaceMemberDialog.ArgumentTypeColumnTitle=Type
InterfaceMemberDialog.EditAttributeDescription=Change the attribute definition.
InterfaceMemberDialog.ArgumentDirectionColumnTitle=In/Out

PackageExportWizard2.DialogTitle=OXT Export
ServiceWizardSet.WrongInitDataWarning=Wrong data for service page set initialization
ServiceWizardSet.ServiceCreationError=Error happened during service creation
ServiceWizardSet.IsIdlTypeExistingWarning=Error determining if the idl file exists: {0}
BaseUnoConnectionPage.Description=Set some important informations for the UNO development
BaseUnoConnectionPage.Title=UNO configuration

ManifestExportPage.Browse=Browse
ManifestExportPage.DefineManifestText=Specify the manifest.xml
ManifestExportPage.Description=Define the options for the OXT package build scripts
ManifestExportPage.GenerateManifestText=Generate the manifest file
ManifestExportPage.LoadDialogMessage=Select the manifest.xml file to use for the OXT package:
ManifestExportPage.LoadDialogTitle=Manifest.xml file selection
ManifestExportPage.LoadRowLabel=Manifest file
ManifestExportPage.SaveDialogMessage=Select a place where to save the manifest file
ManifestExportPage.SaveDialogTitle=Save manifest file
ManifestExportPage.SaveManifestText=Save the manifest in the workspace
ManifestExportPage.SaveRowLabel=Manifest file
ManifestExportPage.Title=Build scripts options
ManifestExportPage.UserManifestText=Use existing manifest file from the workspace

UnoPackageExportPage.AutoDeploy=Automatically deploy on associated LibreOffice installation
UnoPackageExportPage.Browse=Browse
UnoPackageExportPage.Description=Define which resources should be exported in the OXT
UnoPackageExportPage.LibraryCreationError=Couldn't create the library to export
UnoPackageExportPage.Options=Options:
UnoPackageExportPage.OverwriteQuestion=Overwrite the existing file {0}
UnoPackageExportPage.OverwriteWithoutWarning=Overwrite files without warning
UnoPackageExportPage.OxtFile=OXT file:
UnoPackageExportPage.Project=Project to export:
UnoPackageExportPage.SelectDestination=Select the export destination:
UnoPackageExportPage.Title=OXT File specification
